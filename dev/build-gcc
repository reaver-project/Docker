#!/usr/bin/env bash

set -x

if [[ ! $# -eq 1 ]]
then
    echo "-- No branch or tag specified; cloning the default branch."
    branch=""
    branch_name=dev
else
    echo "-- Cloning $1."
    branch="--branch gcc-$1-release"
    branch_name=$1
fi

current_dir=$(dirname $(realpath -s "${BASH_SOURCE[0]}"))

rm -rf built

container_name=build-gcc-$(hostname)-$$

docker run --name "${container_name}" -e branch=${branch} -e http_proxy=${http_proxy} -e https_proxy=${https_proxy} ubuntu:wily /bin/bash -c '
set -x

core_number=$(cat /proc/cpuinfo | grep processor -c)
make_j=$(($core_number * 3 / 2))

apt-get update
apt-get install build-essential gcc g++ libgmp-dev libmpfr-dev libmpc-dev gcc-multilib g++-multilib flex bison -y

mkdir /built-gcc

git clone https://github.com/gcc-mirror/gcc.git --depth=1 $branch gcc || { echo "Couldn'"'"'t clone GCC."; exit 1; }
cd gcc
./configure --enable-languages=c,c++ --prefix=/usr

make -j$make_j -l$core_number && make DESTDIR=/built-gcc install
' || {
    docker rm ${container_name}
    echo "Building GCC failed."
    exit 1
}

echo "-- Creating final image."

set -e

docker cp ${container_name}:/built-gcc ./built
docker rm ${container_name}

pushd built/usr/bin
ln -sf gcc cc
ln -sf g++ c++
popd

docker build -f $current_dir/gcc.docker -t gcc:$branch_name .

